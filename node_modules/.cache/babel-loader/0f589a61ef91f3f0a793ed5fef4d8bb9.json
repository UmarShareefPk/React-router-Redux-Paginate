{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\umar\\\\Desktop\\\\Learning\\\\React\\\\App\\\\routertest\\\\src\\\\components\\\\Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Post extends Component {\n  // constructor(props){\n  //     super(props);\n  //     this.state = {\n  //         post : null\n  //     }\n  // }\n  // componentDidMount(){\n  //     fetch(\"https://jsonplaceholder.typicode.com/posts/\" + this.props.match.params.post_id )\n  //       .then((response) => response.json())\n  //       .then((json) => this.setState({\n  //           post : json\n  //       }));\n  // }\n  deletePost() {\n    this.props.deletePost(this.props.match.params.post_id); // console.log(this.props);\n  }\n\n  render() {\n    if (this.props.post == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"red-text\",\n        children: \"Not Found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    }\n\n    let {\n      post\n    } = this.props;\n    let p = post;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card blue darken-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content white-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"yellow-text\",\n                href: \"/\" + p.id,\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"card-title\",\n                  children: p.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: p.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn red centre\",\n        onClick: () => this.deletePost(),\n        children: \" Delete this post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToprops = (state, ownProps) => {\n  let p = state.posts.filter(p => {\n    return p.id == ownProps.match.params.post_id;\n  });\n  return {\n    post: p[0]\n  };\n};\n\nconst mapActionToProp = dispatch => {\n  return {\n    deletePost: id => {\n      dispatch({\n        type: \"DELETE_POST\",\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToprops, mapActionToProp)(Post);","map":{"version":3,"sources":["C:/Users/umar/Desktop/Learning/React/App/routertest/src/components/Post.js"],"names":["React","Component","connect","Post","deletePost","props","match","params","post_id","render","post","p","id","title","body","mapStateToprops","state","ownProps","posts","filter","mapActionToProp","dispatch","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEC,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAE1B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,UAAU,GAAE;AACR,SAAKC,KAAL,CAAWD,UAAX,CAAsB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,EADQ,CAET;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKJ,KAAL,CAAWK,IAAX,IAAmB,IAAtB,EAA2B;AACvB,0BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AACD,QAAI;AAACA,MAAAA;AAAD,QAAS,KAAKL,KAAlB;AACA,QAAIM,CAAC,GAAGD,IAAR;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACG;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACE;AAAA,qCACC;AAAG,gBAAA,SAAS,EAAC,aAAb;AAA2B,gBAAA,IAAI,EAAE,MAAMC,CAAC,CAACC,EAAzC;AAAA,6CAA8C;AAAM,kBAAA,SAAS,EAAC,YAAhB;AAAA,4BAA8BD,CAAC,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,wBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,wBAAIF,CAAC,CAACG;AAAN;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADH,SAA0BH,CAAC,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADD,eAYE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAG,MAAK,KAAKR,UAAL,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAlDyB;;AAqD9B,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIN,CAAC,GAAGK,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAoBR,CAAD,IAAO;AAChC,WAAOA,CAAC,CAACC,EAAF,IAAQK,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,OAArC;AACD,GAFO,CAAR;AAIA,SAAO;AACLE,IAAAA,IAAI,EAAEC,CAAC,CAAC,CAAD;AADF,GAAP;AAGD,CARD;;AAUA,MAAMS,eAAe,GAAIC,QAAD,IAAc;AACpC,SAAO;AACLjB,IAAAA,UAAU,EAAGQ,EAAD,IAAQ;AAClBS,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBV,QAAAA,EAAE,EAAEA;AAA3B,OAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeV,OAAO,CAACa,eAAD,EAAmBK,eAAnB,CAAP,CAA2CjB,IAA3C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\n class Post extends Component {\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         post : null\r\n    //     }\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     fetch(\"https://jsonplaceholder.typicode.com/posts/\" + this.props.match.params.post_id )\r\n    //       .then((response) => response.json())\r\n    //       .then((json) => this.setState({\r\n    //           post : json\r\n    //       }));\r\n    // }\r\n  \r\n    deletePost(){\r\n        this.props.deletePost(this.props.match.params.post_id);\r\n       // console.log(this.props);\r\n    }\r\n\r\n    render() {\r\n        if(this.props.post == null){\r\n            return (\r\n                <div className=\"red-text\">\r\n                    Not Found.\r\n                </div>\r\n            )\r\n        }\r\n        let {post} = this.props;\r\n        let p = post;\r\n        return (\r\n            <div className=\"container\">\r\n             <div className=\"row\" key={p.id}>\r\n                <div className=\"card blue darken-1\">\r\n                  <div className=\"card-content white-text\">\r\n                    <b>                     \r\n                     <a className=\"yellow-text\" href={\"/\" + p.id}> <span className=\"card-title\">{p.title}</span></a>\r\n                    </b>\r\n                    <p>{p.body}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button className=\"btn red centre\" onClick= {()=> this.deletePost()}> Delete this post</button>\r\n        \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToprops = (state, ownProps) => {\r\n  let p = state.posts.filter((p) => {\r\n    return p.id == ownProps.match.params.post_id;\r\n  });\r\n\r\n  return {\r\n    post: p[0],\r\n  };\r\n};\r\n\r\nconst mapActionToProp = (dispatch) => {\r\n  return {\r\n    deletePost: (id) => {\r\n      dispatch({ type: \"DELETE_POST\", id: id });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToprops , mapActionToProp)(Post)\r\n"]},"metadata":{},"sourceType":"module"}
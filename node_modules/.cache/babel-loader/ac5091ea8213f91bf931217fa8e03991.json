{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\umar\\\\Desktop\\\\Learning\\\\React\\\\App\\\\routertest\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport Img from './Img';\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => this.setState({\n      posts: json\n    }));\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    console.log(posts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card blue darken-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content white-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-title\",\n                children: \"Card Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 22\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/umar/Desktop/Learning/React/App/routertest/src/components/Home.js"],"names":["React","Component","Img","Home","constructor","props","state","posts","componentDidMount","fetch","then","response","json","setState","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAExCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU,KAAKC,QAAL,CAAc;AAC1BN,MAAAA,KAAK,EAAGK;AADkB,KAAd,CAFlB;AAKH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACC;AAAA,2CAAI;AAAM,gBAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBH;;AArCuC","sourcesContent":["import React, { Component } from 'react'\r\nimport Img from './Img'\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts :[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n          .then((response) => response.json())\r\n          .then((json) => this.setState({\r\n              posts : json\r\n          }));\r\n    }\r\n\r\n    render() {\r\n        const {posts} = this.state;\r\n        console.log(posts);\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"card blue darken-1\">\r\n                <div className=\"card-content white-text\">\r\n                 <b> <span className=\"card-title\">Card Title</span> </b>\r\n                  <p>\r\n                    I am a very simple card. I am good at containing small bits\r\n                    of information. I am convenient because I require little\r\n                    markup to use effectively.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}